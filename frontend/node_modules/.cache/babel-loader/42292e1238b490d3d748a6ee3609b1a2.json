{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Picture Gallery\\\\Frontend\\\\picgallery\\\\src\\\\Component\\\\Pages\\\\Home.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../../App';\n\nfunction Home() {\n  const [data, setData] = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  useEffect(() => {\n    fetch('http://localhost:1000/findallpost', {\n      headers: {\n        \"Authorization\": \"Hello \" + localStorage.getItem('jwt')\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      setData(result.posts);\n    });\n  }, []);\n\n  const unlikePost = id => {\n    fetch(\"http://localhost:1000/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Hello \" + localStorage.getItem('jwt')\n      },\n      body: JSON.stringify({\n        postsId: id\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const likePost = id => {\n    fetch(\"http://localhost:1000/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Hello \" + localStorage.getItem('jwt')\n      },\n      body: JSON.stringify({\n        postsId: id\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const commentPost = (text, postsId) => {\n    fetch(\"http://localhost:1000/comment\", {\n      method: 'put',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Hello \" + localStorage.getItem('jwt')\n      },\n      body: JSON.stringify({\n        postsId,\n        text\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, data.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card home-card\",\n      key: item._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, item.postedbyId.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.photo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, item.likes.includes(state._id) ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      onClick: () => {\n        unlikePost(item._id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, \"thumb_down\") : /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      onClick: () => {\n        likePost(item._id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 115\n      }\n    }, \"thumb_up\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, item.likes.length, \" likes\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, item.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }\n    }, item.body), item.comments.map(record => {\n      return /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: '500'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 53\n        }\n      }, record.postedbyId.name), record.text);\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        commentPost(e.target[0].value, item._id);\n        console.log(e.target[0].value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"comment something\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 41\n      }\n    })))));\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["D:/Project/Picture Gallery/Frontend/picgallery/src/Component/Pages/Home.js"],"names":["React","useState","useEffect","useContext","UserContext","Home","data","setData","state","dispatch","fetch","headers","localStorage","getItem","then","res","json","result","console","log","posts","unlikePost","id","method","body","JSON","stringify","postsId","newData","map","item","_id","catch","err","likePost","commentPost","text","postedbyId","name","photo","likes","includes","length","title","comments","record","fontWeight","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,{useState, useEffect, useContext} from 'react'\r\nimport { UserContext } from '../../App'\r\n\r\nfunction Home() {\r\n    const [data,setData] = useState([])\r\n    const {state, dispatch}= useContext(UserContext)\r\n    useEffect(() => {\r\n        fetch('http://localhost:1000/findallpost',{\r\n            headers:{\r\n                \"Authorization\":\"Hello \" + localStorage.getItem('jwt')\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            setData(result.posts)\r\n        })\r\n    }, [])\r\n\r\n    const unlikePost = (id) => {\r\n        fetch(\"http://localhost:1000/unlike\",{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Hello \" + localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                postsId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData  = data.map(item=>{\r\n                if (item._id==result._id){\r\n                    return result\r\n                }else {\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const likePost = (id) => {\r\n        fetch(\"http://localhost:1000/like\",{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Hello \" + localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                postsId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData  = data.map(item=>{\r\n                if (item._id==result._id){\r\n                    return result\r\n                }else {\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const commentPost = (text, postsId) =>{\r\n        fetch(\"http://localhost:1000/comment\",{\r\n            method:'put',\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Hello \" + localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                postsId,\r\n                text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData  = data.map(item=>{\r\n                if (item._id==result._id){ \r\n                    return result\r\n                }else {\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item=>{\r\n                    return(\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            <h6>{item.postedbyId.name}</h6>\r\n                            <div className=\"card image\">\r\n                                <img src={item.photo} />\r\n                        \r\n                                <div className=\"card-content\">\r\n                                {item.likes.includes(state._id)?\r\n                                <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>:<i className=\"material-icons\" onClick={()=>{likePost(item._id)}}>thumb_up</i>}                                \r\n                                    <h6>{item.likes.length} likes</h6>\r\n                                    <h4>{item.title}</h4>\r\n                                    <p>{item.body}</p>\r\n                                    {\r\n                                        item.comments.map(record=>{\r\n                                            return(\r\n                                                <h6><span style={{fontWeight:'500'}}>{record.postedbyId.name}</span>{record.text}</h6> \r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <form onSubmit={(e)=>{\r\n                                        e.preventDefault() \r\n                                        commentPost(e.target[0].value,item._id)\r\n                                        console.log(e.target[0].value)\r\n                                    }}>\r\n                                        <input type=\"text\" placeholder=\"comment something\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}